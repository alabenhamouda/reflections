-What happens when you initialize a repository? Why do you need to do it?
when you first initialize a repository git creates a .git directory to store the meta data
you need to do it to make the directory a git repository to start tracking files.
-How is the staging area different from the working directory and the repository?
What value do you think it offers?
the staging area represents the files that changed and you want them to be committed together
because they represent one logical change. So it's the version that you want to be committed.
Once you're ready then you want to commit that in the repository.
the working directory is just the working directory.
-How can you use the staging area to make sure you have one commit per logical change?
if you made several changes without committing you're still be able to just add the files that
have the new changes in the staging area and commit them only to keep one logical change
per commit.
-What are some situations when branches would be helpful in keeping your history organized?
How would branches help?
if you want start another path in your project like another version or so
and you also need to keep the original version to view or to work on and add commits to it.
Branches come in handy letting work on 2 branches and add commits and modify them both while still being able to
access them easily.
-How do the diagrams help you visualize the branch structure?
The diagrams help you visualize the branch structure and know where do the commits
point.
